<button type="button"
        class="inline-flex w-auto min-w-20 items-center justify-center text-nowrap rounded-lg border border-rose-600 @BackgroundColor px-5 py-2.5 text-center text-sm font-medium @TextColor shadow-lg dark:@BackgroundColorDark dark:@TextColorDark dark:border-yellow-300 sm:px-2.5"
        @onclick="OnClick">
    @Text
</button>

@code {

    [Parameter]
    public SelectModel? Select { get; set; }

    [Parameter]
    public string Text { get; set; } = "";

    [Parameter]
    public string BackgroundColor { get; set; } = "bg-white";

    [Parameter]
    public string BackgroundColorDark { get; set; } = "bg-gray-900";

    [Parameter]
    public string TextColor { get; set; } = "text-rose-600";

    [Parameter]
    public string TextColorDark { get; set; } = "text-yellow-400";

    [Parameter]
    public IRelayCommand RaiseSearchCommand { get; set; }

    private void OnClick()
    {
        var isSelected = !Select?.IsSelected ?? true;

        UpdateElement(isSelected);

        RaiseSearchCommand.Execute(null);
    }

    private void UpdateElement(bool isSelected)
    {
        if (Select != null)
        {
            Console.WriteLine($"UpdateElement: {isSelected} -> {Select.IsSelected}");
            Select.IsSelected = isSelected;
        }

        BackgroundColor = isSelected ? "bg-rose-600" : "bg-white";
        BackgroundColorDark = isSelected ? "bg-yellow-400" : "bg-gray-900";
        TextColor = isSelected ? "text-white" : "text-rose-600";
        TextColorDark = isSelected ? "text-white" : "text-yellow-400";

        
    }

    protected override void OnParametersSet()
    {
        if (Select == null)
        {
            UpdateElement(false);
        }
        else
        {
            UpdateElement(Select.IsSelected);
        }

        base.OnParametersSet();
    }

}