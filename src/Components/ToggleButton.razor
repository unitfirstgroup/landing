<button type="button"
        class="inline-flex w-auto min-w-20 items-center justify-center rounded-lg border border-rose-600 @BackgroundColor px-5 py-2.5 text-center text-sm font-medium @TextColor shadow-lg dark:@BackgroundColorDark dark:@TextColorDark dark:border-yellow-300 sm:px-2.5" 
        @onclick="OnClick">
    @Text
</button>


@* <label class="inline-flex cursor-pointer items-center">
    <input type="checkbox" value="" class="peer sr-only">
    <div class="relative w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600 dark:peer-checked:bg-blue-600"></div>
    <span class="ms-3 text-sm font-medium text-gray-900 dark:text-gray-300">Toggle me</span>
</label> *@

@* <input type="checkbox"
       @onclick="OnClick"
       @bind-value="@IsSelected"
       value="@Text"
       class="inline-flex w-auto min-w-20 items-center justify-center rounded-lg border border-rose-600 @BackgroundColor px-5 py-2.5 text-center text-sm font-medium @TextColor shadow-lg dark:@BackgroundColorDark dark:@TextColorDark dark:border-yellow-300 sm:px-2.5"/>
       
 *@

@* <button type="button"
        class="inline-flex w-auto min-w-20 items-center justify-center rounded-lg border border-rose-600 @BackgroundColor px-5 py-2.5 text-center text-sm font-medium @TextColor shadow-lg dark:@BackgroundColorDark dark:@TextColorDark dark:border-yellow-300 sm:px-2.5"
        @onclick="OnClick">
    <input type="checkbox"
           @bind-value="@IsSelected"/>
    @Text
</button>
 *@

@code {

    [Parameter]
    public bool IsSelected { get; set; }

    [Parameter]
    public string Text { get; set; } = "";

    [Parameter]
    public string BackgroundColor { get; set; } = "bg-white";

    [Parameter]
    public string BackgroundColorDark { get; set; } = "bg-gray-900";

    [Parameter]
    public string TextColor { get; set; } = "text-rose-600";

    [Parameter]
    public string TextColorDark { get; set; } = "text-yellow-400";

    [Parameter]
    public IRelayCommand RaiseSearchCommand { get; set; }

    private void OnClick()
    {
        var isSelected = !IsSelected;
        IsSelected = isSelected;

        BackgroundColor = IsSelected ? "bg-rose-600" : "bg-white";
        BackgroundColorDark = IsSelected ? "bg-yellow-400" : "bg-gray-900";
        TextColor = IsSelected ? "text-white" : "text-rose-600";
        TextColorDark = IsSelected ? "text-white" : "text-yellow-400";

        RaiseSearchCommand.Execute(null);
    }

    protected override void OnParametersSet()
    {
        BackgroundColor = IsSelected ? "bg-rose-600" : "bg-white";
        BackgroundColorDark = IsSelected ? "bg-yellow-400" : "bg-gray-900";
        TextColor = IsSelected ? "text-white" : "text-rose-600";
        TextColorDark = IsSelected ? "text-white" : "text-yellow-400";
        base.OnParametersSet();
    }

}