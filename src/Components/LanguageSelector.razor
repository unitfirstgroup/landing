@inject IJSRuntime JsRuntime
@inject NavigationManager Nav

<div class="bg-white-main flex flex-row text-black dark:bg-dark-main dark:text-white-main">

    <button id="languageButton" data-dropdown-toggle="languages"
            class="bg-white-main inline-flex h-10 w-10 items-center justify-center rounded-lg p-2.5 text-sm text-gray-500 text-black hover:bg-gray-100 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:bg-dark-main dark:text-white-main dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-700" type="button">
        <img alt="@SelectedLanguage.Language" src="@SelectedLanguage.ImageSource"/>
    </button>

    <!-- Dropdown menu -->
    <div id="languages" class="z-10 hidden divide-y divide-gray-100 rounded-lg bg-gray-100 shadow-sm hover:cursor-not-allowed dark:bg-gray-700">
        <ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="languageButton">
            @foreach (var item in Languages)
            {
                <LanguageListItem Language="@item.Language" ImageSource="@item.ImageSource" LanguageSelected="LanguageSelected"></LanguageListItem>
            }
        </ul>
    </div>

</div>

@code
{
    [Parameter]
    public ObservableCollection<LanguageListItemModel> Languages { get; set; }

    [Parameter]
    public LanguageListItemModel SelectedLanguage { get; set; }
    
    private void LanguageSelected(string language)
    {
        var selected = Languages.FirstOrDefault(x => x.Language == language);
        if (selected != null)
        {
            SelectedLanguage = selected;
        }
        StateHasChanged();

        if (selected != null)
        {
            Task.Run(() =>
            {
                var js = (IJSInProcessRuntime)JsRuntime;
                js.InvokeVoidAsync("appCulture.set", selected.Language);
            }).ContinueWith((x) => Nav.NavigateTo(Nav.Uri, true));
        }
    }
}