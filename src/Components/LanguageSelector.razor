@using System.Collections.ObjectModel
@inject IJSRuntime JSRuntime
@inject NavigationManager Nav

<div class="flex flex-row @Dark bg-white text-black dark:bg-gray-900 dark:text-white">

    <button id="languageButton" data-dropdown-toggle="languages"
            class="inline-flex h-10 w-10 items-center justify-center rounded-lg bg-white p-2.5 text-sm text-gray-500 text-black hover:bg-gray-100 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:text-gray-400 dark:bg-gray-900 dark:text-white dark:hover:bg-gray-700 dark:focus:ring-gray-700" type="button">
        <img alt="@SelectedLanguage.Language" src="@SelectedLanguage.ImageSource"/>
    </button>

    <!-- Dropdown menu -->
    <div id="languages" class="z-10 hidden divide-y divide-gray-100 rounded-lg bg-gray-100 shadow-sm hover:cursor-not-allowed dark:bg-gray-700">
        <ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="languageButton">
            @foreach (var item in Languages)
            {
                <LanguageListItem Language="@item.Language" ImageSource="@item.ImageSource" LanguageSelected="LanguageSelected"></LanguageListItem>
            }
        </ul>
    </div>

</div>

@code
{
    [Parameter]
    public string Dark { get; set; }

    [Parameter]
    public ObservableCollection<LanguageListItemModel> Languages { get; set; }
    
    [Parameter]
    public LanguageListItemModel SelectedLanguage { get; set; }

    // public void SelectLanguage(string culture)
    // {
    //     var js = (IJSInProcessRuntime)JSRuntime;
    //     js.InvokeVoid("appCulture.set", new CultureInfo(culture));
    //     Nav.NavigateTo(Nav.Uri, true);
    // }

    // public void SelectLanguageItem(string id)
    // {
    //     var js = (IJSInProcessRuntime)JSRuntime;
    //     js.InvokeVoid("appCulture.set", new CultureInfo("ru-RU"));
    //     Nav.NavigateTo(Nav.Uri, true);
    // }

    private void LanguageSelected(string language)
    {
        Console.WriteLine($"LanguageSelected: {language}");
        var selected = Languages.FirstOrDefault(x => x.Language == language);
        if (selected != null)
        {
            SelectedLanguage = selected;
            
        }
        StateHasChanged();
        // var js = (IJSInProcessRuntime)JSRuntime;
        // var culture = new CultureInfo(selected.Language);
        // js.InvokeVoid("appCulture.set", culture);
        // Nav.NavigateTo(Nav.Uri, true);
    }

    protected override void OnParametersSet()
    {
        Console.WriteLine($"OnParametersSet");
        SelectedLanguage = Languages.FirstOrDefault() ?? new LanguageListItemModel(){Language = "en-US", ImageSource = "images/us.svg"};
        base.OnParametersSet();
    }
}